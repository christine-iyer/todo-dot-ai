{"ast":null,"code":"import { defaultGetScrollRestorationKey, getCssSelector, scrollRestorationCache, setupScrollRestoration } from \"@tanstack/router-core\";\nimport { useRouter } from \"./useRouter.js\";\nfunction useScrollRestoration() {\n  const router = useRouter();\n  setupScrollRestoration(router, true);\n}\nfunction ScrollRestoration(_props) {\n  useScrollRestoration();\n  if (process.env.NODE_ENV === \"development\") {\n    console.warn(\"The ScrollRestoration component is deprecated. Use createRouter's `scrollRestoration` option instead.\");\n  }\n  return null;\n}\nfunction useElementScrollRestoration(options) {\n  var _a;\n  useScrollRestoration();\n  const router = useRouter();\n  const getKey = options.getKey || defaultGetScrollRestorationKey;\n  let elementSelector = \"\";\n  if (options.id) {\n    elementSelector = `[data-scroll-restoration-id=\"${options.id}\"]`;\n  } else {\n    const element = (_a = options.getElement) == null ? void 0 : _a.call(options);\n    if (!element) {\n      return;\n    }\n    elementSelector = element instanceof Window ? \"window\" : getCssSelector(element);\n  }\n  const restoreKey = getKey(router.latestLocation);\n  const byKey = scrollRestorationCache.state[restoreKey];\n  return byKey == null ? void 0 : byKey[elementSelector];\n}\nexport { ScrollRestoration, useElementScrollRestoration };","map":{"version":3,"names":["useScrollRestoration","router","useRouter","setupScrollRestoration","ScrollRestoration","_props","process","env","NODE_ENV","console","warn","useElementScrollRestoration","options","getKey","defaultGetScrollRestorationKey","elementSelector","id","element","_a","getElement","call","Window","getCssSelector","restoreKey","latestLocation","byKey","scrollRestorationCache","state"],"sources":["/Users/christineiyer/Documents/tan-stack-learning/todo-dot-ai/frontend/node_modules/@tanstack/react-router/src/ScrollRestoration.tsx"],"sourcesContent":["import {\n  defaultGetScrollRestorationKey,\n  getCssSelector,\n  scrollRestorationCache,\n  setupScrollRestoration,\n} from '@tanstack/router-core'\nimport { useRouter } from './useRouter'\nimport type {\n  ParsedLocation,\n  ScrollRestorationEntry,\n  ScrollRestorationOptions,\n} from '@tanstack/router-core'\n\nfunction useScrollRestoration() {\n  const router = useRouter()\n  setupScrollRestoration(router, true)\n}\n\n/**\n * @deprecated use createRouter's `scrollRestoration` option instead\n */\nexport function ScrollRestoration(_props: ScrollRestorationOptions) {\n  useScrollRestoration()\n\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(\n      \"The ScrollRestoration component is deprecated. Use createRouter's `scrollRestoration` option instead.\",\n    )\n  }\n\n  return null\n}\n\nexport function useElementScrollRestoration(\n  options: (\n    | {\n        id: string\n        getElement?: () => Window | Element | undefined | null\n      }\n    | {\n        id?: string\n        getElement: () => Window | Element | undefined | null\n      }\n  ) & {\n    getKey?: (location: ParsedLocation) => string\n  },\n): ScrollRestorationEntry | undefined {\n  useScrollRestoration()\n\n  const router = useRouter()\n  const getKey = options.getKey || defaultGetScrollRestorationKey\n\n  let elementSelector = ''\n\n  if (options.id) {\n    elementSelector = `[data-scroll-restoration-id=\"${options.id}\"]`\n  } else {\n    const element = options.getElement?.()\n    if (!element) {\n      return\n    }\n    elementSelector =\n      element instanceof Window ? 'window' : getCssSelector(element)\n  }\n\n  const restoreKey = getKey(router.latestLocation)\n  const byKey = scrollRestorationCache.state[restoreKey]\n  return byKey?.[elementSelector]\n}\n"],"mappings":";;AAaA,SAASA,qBAAA,EAAuB;EAC9B,MAAMC,MAAA,GAASC,SAAA,CAAU;EACzBC,sBAAA,CAAuBF,MAAA,EAAQ,IAAI;AACrC;AAKO,SAASG,kBAAkBC,MAAA,EAAkC;EAC7CL,oBAAA;EAEjB,IAAAM,OAAA,CAAQC,GAAA,CAAIC,QAAA,KAAa,eAAe;IAClCC,OAAA,CAAAC,IAAA,CACN,uGACF;EAAA;EAGK;AACT;AAEO,SAASC,4BACdC,OAAA,EAYoC;;EACfZ,oBAAA;EAErB,MAAMC,MAAA,GAASC,SAAA,CAAU;EACnB,MAAAW,MAAA,GAASD,OAAA,CAAQC,MAAA,IAAUC,8BAAA;EAEjC,IAAIC,eAAA,GAAkB;EAEtB,IAAIH,OAAA,CAAQI,EAAA,EAAI;IACID,eAAA,mCAAgCH,OAAA,CAAQI,EAAE;EAAA,OACvD;IACC,MAAAC,OAAA,IAAUC,EAAA,GAAAN,OAAA,CAAQO,UAAA,KAAR,gBAAAD,EAAA,CAAAE,IAAA,CAAAR,OAAA;IAChB,IAAI,CAACK,OAAA,EAAS;MACZ;IAAA;IAEFF,eAAA,GACEE,OAAA,YAAmBI,MAAA,GAAS,WAAWC,cAAA,CAAeL,OAAO;EAAA;EAG3D,MAAAM,UAAA,GAAaV,MAAA,CAAOZ,MAAA,CAAOuB,cAAc;EACzC,MAAAC,KAAA,GAAQC,sBAAA,CAAuBC,KAAA,CAAMJ,UAAU;EACrD,OAAOE,KAAA,oBAAAA,KAAA,CAAQV,eAAA;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}