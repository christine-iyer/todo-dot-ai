{"ast":null,"code":"import { jsx, Fragment } from \"react/jsx-runtime\";\nimport { createElement } from \"react\";\nimport { Asset } from \"./Asset.js\";\nimport { useRouterState } from \"./useRouterState.js\";\nimport { useRouter } from \"./useRouter.js\";\nconst Scripts = () => {\n  const router = useRouter();\n  const assetScripts = useRouterState({\n    select: state => {\n      var _a;\n      const assetScripts2 = [];\n      const manifest = (_a = router.ssr) == null ? void 0 : _a.manifest;\n      if (!manifest) {\n        return [];\n      }\n      state.matches.map(match => router.looseRoutesById[match.routeId]).forEach(route => {\n        var _a2, _b;\n        return (_b = (_a2 = manifest.routes[route.id]) == null ? void 0 : _a2.assets) == null ? void 0 : _b.filter(d => d.tag === \"script\").forEach(asset => {\n          assetScripts2.push({\n            tag: \"script\",\n            attrs: asset.attrs,\n            children: asset.children\n          });\n        });\n      });\n      return assetScripts2;\n    },\n    structuralSharing: true\n  });\n  const {\n    scripts\n  } = useRouterState({\n    select: state => ({\n      scripts: state.matches.map(match => match.scripts).flat(1).filter(Boolean).map(({\n        children,\n        ...script\n      }) => ({\n        tag: \"script\",\n        attrs: {\n          ...script,\n          suppressHydrationWarning: true\n        },\n        children\n      }))\n    })\n  });\n  const allScripts = [...scripts, ...assetScripts];\n  return /* @__PURE__ */jsx(Fragment, {\n    children: allScripts.map((asset, i) => /* @__PURE__ */createElement(Asset, {\n      ...asset,\n      key: `tsr-scripts-${asset.tag}-${i}`\n    }))\n  });\n};\nexport { Scripts };","map":{"version":3,"names":["Scripts","router","useRouter","assetScripts","useRouterState","select","state","assetScripts2","manifest","_a","ssr","matches","map","match","looseRoutesById","routeId","forEach","route","_b","_a2","routes","id","assets","filter","d","tag","asset","push","attrs","children","structuralSharing","scripts","flat","Boolean","script","suppressHydrationWarning","allScripts","jsx","Fragment","i","createElement","Asset","key"],"sources":["/Users/christineiyer/Documents/tan-stack-learning/todo-dot-ai/frontend/node_modules/@tanstack/react-router/src/Scripts.tsx"],"sourcesContent":["import { Asset } from './Asset'\nimport { useRouterState } from './useRouterState'\nimport { useRouter } from './useRouter'\nimport type { RouterManagedTag } from '@tanstack/router-core'\n\nexport const Scripts = () => {\n  const router = useRouter()\n\n  const assetScripts = useRouterState({\n    select: (state) => {\n      const assetScripts: Array<RouterManagedTag> = []\n      const manifest = router.ssr?.manifest\n\n      if (!manifest) {\n        return []\n      }\n\n      state.matches\n        .map((match) => router.looseRoutesById[match.routeId]!)\n        .forEach((route) =>\n          manifest.routes[route.id]?.assets\n            ?.filter((d) => d.tag === 'script')\n            .forEach((asset) => {\n              assetScripts.push({\n                tag: 'script',\n                attrs: asset.attrs,\n                children: asset.children,\n              } as any)\n            }),\n        )\n\n      return assetScripts\n    },\n    structuralSharing: true as any,\n  })\n\n  const { scripts } = useRouterState({\n    select: (state) => ({\n      scripts: (\n        state.matches\n          .map((match) => match.scripts!)\n          .flat(1)\n          .filter(Boolean) as Array<RouterManagedTag>\n      ).map(({ children, ...script }) => ({\n        tag: 'script',\n        attrs: {\n          ...script,\n          suppressHydrationWarning: true,\n        },\n        children,\n      })),\n    }),\n  })\n\n  const allScripts = [...scripts, ...assetScripts] as Array<RouterManagedTag>\n\n  return (\n    <>\n      {allScripts.map((asset, i) => (\n        <Asset {...asset} key={`tsr-scripts-${asset.tag}-${i}`} />\n      ))}\n    </>\n  )\n}\n"],"mappings":";;;;;AAKO,MAAMA,OAAA,GAAUA,CAAA,KAAM;EAC3B,MAAMC,MAAA,GAASC,SAAA,CAAU;EAEzB,MAAMC,YAAA,GAAeC,cAAA,CAAe;IAClCC,MAAA,EAASC,KAAA,IAAU;;MACjB,MAAMC,aAAA,GAAwC,EAAC;MACzC,MAAAC,QAAA,IAAWC,EAAA,GAAAR,MAAA,CAAOS,GAAA,KAAP,gBAAAD,EAAA,CAAYD,QAAA;MAE7B,IAAI,CAACA,QAAA,EAAU;QACb,OAAO,EAAC;MAAA;MAGJF,KAAA,CAAAK,OAAA,CACHC,GAAA,CAAKC,KAAA,IAAUZ,MAAA,CAAOa,eAAA,CAAgBD,KAAA,CAAME,OAAO,CAAE,EACrDC,OAAA,CAASC,KAAA,IACR;;QAAA,QAAAC,EAAA,IAAAC,GAAA,GAAAX,QAAA,CAASY,MAAA,CAAOH,KAAA,CAAMI,EAAE,MAAxB,gBAAAF,GAAA,CAA2BG,MAAA,KAA3B,gBAAAJ,EAAA,CACIK,MAAA,CAAQC,CAAA,IAAMA,CAAA,CAAEC,GAAA,KAAQ,UACzBT,OAAA,CAASU,KAAA,IAAU;UAClBnB,aAAA,CAAaoB,IAAA,CAAK;YAChBF,GAAA,EAAK;YACLG,KAAA,EAAOF,KAAA,CAAME,KAAA;YACbC,QAAA,EAAUH,KAAA,CAAMG;UAAA,CACV;QACT;MAAA,CACL;MAEK,OAAAtB,aAAA;IACT;IACAuB,iBAAA,EAAmB;EAAA,CACpB;EAEK;IAAEC;EAAQ,IAAI3B,cAAA,CAAe;IACjCC,MAAA,EAASC,KAAA,KAAW;MAClByB,OAAA,EACEzB,KAAA,CAAMK,OAAA,CACHC,GAAA,CAAKC,KAAA,IAAUA,KAAA,CAAMkB,OAAQ,EAC7BC,IAAA,CAAK,CAAC,EACNT,MAAA,CAAOU,OAAO,EACjBrB,GAAA,CAAI,CAAC;QAAEiB,QAAA;QAAU,GAAGK;MAAA,OAAc;QAClCT,GAAA,EAAK;QACLG,KAAA,EAAO;UACL,GAAGM,MAAA;UACHC,wBAAA,EAA0B;QAC5B;QACAN;MAAA,EACA;IACJ;EAAA,CACD;EAED,MAAMO,UAAA,GAAa,CAAC,GAAGL,OAAA,EAAS,GAAG5B,YAAY;EAE/C,sBAAAkC,GAAA,CAAAC,QAAA;IAEKT,QAAA,EAAWO,UAAA,CAAAxB,GAAA,CAAI,CAACc,KAAA,EAAOa,CAAA,oBAAAC,aAAA,CACrBC,KAAA,EAAO;MAAA,GAAGf,KAAA;MAAOgB,GAAA,EAAK,eAAehB,KAAA,CAAMD,GAAG,IAAIc,CAAC;IAAA,CAAI,CACzD;EAAA,CACH;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}