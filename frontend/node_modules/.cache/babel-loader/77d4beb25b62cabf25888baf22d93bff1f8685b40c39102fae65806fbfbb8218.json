{"ast":null,"code":"var _jsxFileName = \"/Users/christineiyer/Documents/tan-stack-learning/todo-dot-ai/frontend/src/routes.tsx\";\nimport { createRootRoute, createRoute, createRouter, RouterProvider } from '@tanstack/react-router';\nimport TodoPage from './pages/TodoPage';\nimport AiToolsPage from './pages/AiToolsPage';\nimport App from './App';\n\n// Define the root route\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootRoute = createRootRoute({\n  component: App\n});\n\n// Define child routes directly\nconst todoRoute = createRoute({\n  getParentRoute: () => rootRoute,\n  path: '/',\n  component: TodoPage\n});\nconst aiToolsRoute = createRoute({\n  getParentRoute: () => rootRoute,\n  path: '/ai-tools',\n  component: AiToolsPage\n});\n\n// Create the router using the root route and child routes\nconst router = createRouter({\n  routeTree: rootRoute.addChildren([todoRoute, aiToolsRoute]),\n  // Attach child routes\n  defaultPreload: 'intent'\n});\n\n// Register the router for type safety\n\nexport default function Routes() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n_c = Routes;\nvar _c;\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"names":["createRootRoute","createRoute","createRouter","RouterProvider","TodoPage","AiToolsPage","App","jsxDEV","_jsxDEV","rootRoute","component","todoRoute","getParentRoute","path","aiToolsRoute","router","routeTree","addChildren","defaultPreload","Routes","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christineiyer/Documents/tan-stack-learning/todo-dot-ai/frontend/src/routes.tsx"],"sourcesContent":["import { createRootRoute, createRoute, createRouter, RouterProvider } from '@tanstack/react-router';\nimport TodoPage from './pages/TodoPage';\nimport AiToolsPage from './pages/AiToolsPage';\nimport App from './App';\n\n// Define the root route\nconst rootRoute = createRootRoute({\n  component: App,\n});\n\n// Define child routes directly\nconst todoRoute = createRoute({\n  getParentRoute: () => rootRoute,\n  path: '/',\n  component: TodoPage,\n});\n\nconst aiToolsRoute = createRoute({\n  getParentRoute: () => rootRoute,\n  path: '/ai-tools',\n  component: AiToolsPage,\n});\n\n// Create the router using the root route and child routes\nconst router = createRouter({\n  routeTree: rootRoute.addChildren([todoRoute, aiToolsRoute]), // Attach child routes\n  defaultPreload: 'intent',\n});\n\n// Register the router for type safety\ndeclare module '@tanstack/react-router' {\n  interface Register {\n    router: typeof router;\n  }\n}\n\nexport default function Routes() {\n  return <RouterProvider router={router} />;\n}"],"mappings":";AAAA,SAASA,eAAe,EAAEC,WAAW,EAAEC,YAAY,EAAEC,cAAc,QAAQ,wBAAwB;AACnG,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,GAAG,MAAM,OAAO;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGT,eAAe,CAAC;EAChCU,SAAS,EAAEJ;AACb,CAAC,CAAC;;AAEF;AACA,MAAMK,SAAS,GAAGV,WAAW,CAAC;EAC5BW,cAAc,EAAEA,CAAA,KAAMH,SAAS;EAC/BI,IAAI,EAAE,GAAG;EACTH,SAAS,EAAEN;AACb,CAAC,CAAC;AAEF,MAAMU,YAAY,GAAGb,WAAW,CAAC;EAC/BW,cAAc,EAAEA,CAAA,KAAMH,SAAS;EAC/BI,IAAI,EAAE,WAAW;EACjBH,SAAS,EAAEL;AACb,CAAC,CAAC;;AAEF;AACA,MAAMU,MAAM,GAAGb,YAAY,CAAC;EAC1Bc,SAAS,EAAEP,SAAS,CAACQ,WAAW,CAAC,CAACN,SAAS,EAAEG,YAAY,CAAC,CAAC;EAAE;EAC7DI,cAAc,EAAE;AAClB,CAAC,CAAC;;AAEF;;AAOA,eAAe,SAASC,MAAMA,CAAA,EAAG;EAC/B,oBAAOX,OAAA,CAACL,cAAc;IAACY,MAAM,EAAEA;EAAO;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACC,EAAA,GAFuBL,MAAM;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}