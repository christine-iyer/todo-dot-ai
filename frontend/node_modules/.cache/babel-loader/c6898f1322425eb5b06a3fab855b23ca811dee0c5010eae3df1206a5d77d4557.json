{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { flushSync } from \"react-dom\";\nimport { preloadWarning, functionalUpdate, exactPathTest, removeTrailingSlash, deepEqual } from \"@tanstack/router-core\";\nimport { useRouterState } from \"./useRouterState.js\";\nimport { useRouter } from \"./useRouter.js\";\nimport { useForwardedRef, useIntersectionObserver, useLayoutEffect } from \"./utils.js\";\nimport { useMatches } from \"./Matches.js\";\nfunction useLinkProps(options, forwardedRef) {\n  const router = useRouter();\n  const [isTransitioning, setIsTransitioning] = React.useState(false);\n  const hasRenderFetched = React.useRef(false);\n  const innerRef = useForwardedRef(forwardedRef);\n  const {\n    // custom props\n    activeProps = () => ({\n      className: \"active\"\n    }),\n    inactiveProps = () => ({}),\n    activeOptions,\n    to,\n    preload: userPreload,\n    preloadDelay: userPreloadDelay,\n    hashScrollIntoView,\n    replace,\n    startTransition,\n    resetScroll,\n    viewTransition,\n    // element props\n    children,\n    target,\n    disabled,\n    style,\n    className,\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseLeave,\n    onTouchStart,\n    ignoreBlocker,\n    ...rest\n  } = options;\n  const {\n    // prevent these from being returned\n    params: _params,\n    search: _search,\n    hash: _hash,\n    state: _state,\n    mask: _mask,\n    reloadDocument: _reloadDocument,\n    ...propsSafeToSpread\n  } = rest;\n  const type = React.useMemo(() => {\n    try {\n      new URL(`${to}`);\n      return \"external\";\n    } catch {}\n    return \"internal\";\n  }, [to]);\n  const currentSearch = useRouterState({\n    select: s => s.location.search,\n    structuralSharing: true\n  });\n  const from = useMatches({\n    select: matches => {\n      var _a;\n      return options.from ?? ((_a = matches[matches.length - 1]) == null ? void 0 : _a.fullPath);\n    }\n  });\n  const _options = React.useMemo(() => ({\n    ...options,\n    from\n  }), [options, from]);\n  const next = React.useMemo(() => router.buildLocation(_options),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [router, _options, currentSearch]);\n  const preload = React.useMemo(() => {\n    if (_options.reloadDocument) {\n      return false;\n    }\n    return userPreload ?? router.options.defaultPreload;\n  }, [router.options.defaultPreload, userPreload, _options.reloadDocument]);\n  const preloadDelay = userPreloadDelay ?? router.options.defaultPreloadDelay ?? 0;\n  const isActive = useRouterState({\n    select: s => {\n      if (activeOptions == null ? void 0 : activeOptions.exact) {\n        const testExact = exactPathTest(s.location.pathname, next.pathname, router.basepath);\n        if (!testExact) {\n          return false;\n        }\n      } else {\n        const currentPathSplit = removeTrailingSlash(s.location.pathname, router.basepath).split(\"/\");\n        const nextPathSplit = removeTrailingSlash(next.pathname, router.basepath).split(\"/\");\n        const pathIsFuzzyEqual = nextPathSplit.every((d, i) => d === currentPathSplit[i]);\n        if (!pathIsFuzzyEqual) {\n          return false;\n        }\n      }\n      if ((activeOptions == null ? void 0 : activeOptions.includeSearch) ?? true) {\n        const searchTest = deepEqual(s.location.search, next.search, {\n          partial: !(activeOptions == null ? void 0 : activeOptions.exact),\n          ignoreUndefined: !(activeOptions == null ? void 0 : activeOptions.explicitUndefined)\n        });\n        if (!searchTest) {\n          return false;\n        }\n      }\n      if (activeOptions == null ? void 0 : activeOptions.includeHash) {\n        return s.location.hash === next.hash;\n      }\n      return true;\n    }\n  });\n  const doPreload = React.useCallback(() => {\n    router.preloadRoute(_options).catch(err => {\n      console.warn(err);\n      console.warn(preloadWarning);\n    });\n  }, [_options, router]);\n  const preloadViewportIoCallback = React.useCallback(entry => {\n    if (entry == null ? void 0 : entry.isIntersecting) {\n      doPreload();\n    }\n  }, [doPreload]);\n  useIntersectionObserver(innerRef, preloadViewportIoCallback, {\n    rootMargin: \"100px\"\n  }, {\n    disabled: !!disabled || !(preload === \"viewport\")\n  });\n  useLayoutEffect(() => {\n    if (hasRenderFetched.current) {\n      return;\n    }\n    if (!disabled && preload === \"render\") {\n      doPreload();\n      hasRenderFetched.current = true;\n    }\n  }, [disabled, doPreload, preload]);\n  if (type === \"external\") {\n    return {\n      ...propsSafeToSpread,\n      ref: innerRef,\n      type,\n      href: to,\n      ...(children && {\n        children\n      }),\n      ...(target && {\n        target\n      }),\n      ...(disabled && {\n        disabled\n      }),\n      ...(style && {\n        style\n      }),\n      ...(className && {\n        className\n      }),\n      ...(onClick && {\n        onClick\n      }),\n      ...(onFocus && {\n        onFocus\n      }),\n      ...(onMouseEnter && {\n        onMouseEnter\n      }),\n      ...(onMouseLeave && {\n        onMouseLeave\n      }),\n      ...(onTouchStart && {\n        onTouchStart\n      })\n    };\n  }\n  const handleClick = e => {\n    if (!disabled && !isCtrlEvent(e) && !e.defaultPrevented && (!target || target === \"_self\") && e.button === 0) {\n      e.preventDefault();\n      flushSync(() => {\n        setIsTransitioning(true);\n      });\n      const unsub = router.subscribe(\"onResolved\", () => {\n        unsub();\n        setIsTransitioning(false);\n      });\n      return router.navigate({\n        ..._options,\n        replace,\n        resetScroll,\n        hashScrollIntoView,\n        startTransition,\n        viewTransition,\n        ignoreBlocker\n      });\n    }\n  };\n  const handleFocus = _ => {\n    if (disabled) return;\n    if (preload) {\n      doPreload();\n    }\n  };\n  const handleTouchStart = handleFocus;\n  const handleEnter = e => {\n    if (disabled) return;\n    const eventTarget = e.target || {};\n    if (preload) {\n      if (eventTarget.preloadTimeout) {\n        return;\n      }\n      eventTarget.preloadTimeout = setTimeout(() => {\n        eventTarget.preloadTimeout = null;\n        doPreload();\n      }, preloadDelay);\n    }\n  };\n  const handleLeave = e => {\n    if (disabled) return;\n    const eventTarget = e.target || {};\n    if (eventTarget.preloadTimeout) {\n      clearTimeout(eventTarget.preloadTimeout);\n      eventTarget.preloadTimeout = null;\n    }\n  };\n  const composeHandlers = handlers => e => {\n    var _a;\n    (_a = e.persist) == null ? void 0 : _a.call(e);\n    handlers.filter(Boolean).forEach(handler => {\n      if (e.defaultPrevented) return;\n      handler(e);\n    });\n  };\n  const resolvedActiveProps = isActive ? functionalUpdate(activeProps, {}) ?? {} : {};\n  const resolvedInactiveProps = isActive ? {} : functionalUpdate(inactiveProps, {});\n  const resolvedClassName = [className, resolvedActiveProps.className, resolvedInactiveProps.className].filter(Boolean).join(\" \");\n  const resolvedStyle = {\n    ...style,\n    ...resolvedActiveProps.style,\n    ...resolvedInactiveProps.style\n  };\n  return {\n    ...propsSafeToSpread,\n    ...resolvedActiveProps,\n    ...resolvedInactiveProps,\n    href: disabled ? void 0 : next.maskedLocation ? router.history.createHref(next.maskedLocation.href) : router.history.createHref(next.href),\n    ref: innerRef,\n    onClick: composeHandlers([onClick, handleClick]),\n    onFocus: composeHandlers([onFocus, handleFocus]),\n    onMouseEnter: composeHandlers([onMouseEnter, handleEnter]),\n    onMouseLeave: composeHandlers([onMouseLeave, handleLeave]),\n    onTouchStart: composeHandlers([onTouchStart, handleTouchStart]),\n    disabled: !!disabled,\n    target,\n    ...(Object.keys(resolvedStyle).length && {\n      style: resolvedStyle\n    }),\n    ...(resolvedClassName && {\n      className: resolvedClassName\n    }),\n    ...(disabled && {\n      role: \"link\",\n      \"aria-disabled\": true\n    }),\n    ...(isActive && {\n      \"data-status\": \"active\",\n      \"aria-current\": \"page\"\n    }),\n    ...(isTransitioning && {\n      \"data-transitioning\": \"transitioning\"\n    })\n  };\n}\nfunction createLink(Comp) {\n  return React.forwardRef(function CreatedLink(props, ref) {\n    return /* @__PURE__ */jsx(Link, {\n      ...props,\n      _asChild: Comp,\n      ref\n    });\n  });\n}\nconst Link = React.forwardRef((props, ref) => {\n  const {\n    _asChild,\n    ...rest\n  } = props;\n  const {\n    type: _type,\n    ref: innerRef,\n    ...linkProps\n  } = useLinkProps(rest, ref);\n  const children = typeof rest.children === \"function\" ? rest.children({\n    isActive: linkProps[\"data-status\"] === \"active\"\n  }) : rest.children;\n  if (typeof _asChild === \"undefined\") {\n    delete linkProps.disabled;\n  }\n  return React.createElement(_asChild ? _asChild : \"a\", {\n    ...linkProps,\n    ref: innerRef\n  }, children);\n});\nfunction isCtrlEvent(e) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);\n}\nconst linkOptions = options => {\n  return options;\n};\nexport { Link, createLink, linkOptions, useLinkProps };","map":{"version":3,"names":["useLinkProps","options","forwardedRef","router","useRouter","isTransitioning","setIsTransitioning","React","useState","hasRenderFetched","useRef","innerRef","useForwardedRef","activeProps","className","inactiveProps","activeOptions","to","preload","userPreload","preloadDelay","userPreloadDelay","hashScrollIntoView","replace","startTransition","resetScroll","viewTransition","children","target","disabled","style","onClick","onFocus","onMouseEnter","onMouseLeave","onTouchStart","ignoreBlocker","rest","params","_params","search","_search","hash","_hash","state","_state","mask","_mask","reloadDocument","_reloadDocument","propsSafeToSpread","type","useMemo","URL","currentSearch","useRouterState","select","s","location","structuralSharing","from","useMatches","matches","_a","length","fullPath","_options","next","buildLocation","defaultPreload","defaultPreloadDelay","isActive","exact","testExact","exactPathTest","pathname","basepath","currentPathSplit","removeTrailingSlash","split","nextPathSplit","pathIsFuzzyEqual","every","d","i","includeSearch","searchTest","deepEqual","partial","ignoreUndefined","explicitUndefined","includeHash","doPreload","useCallback","preloadRoute","catch","err","console","warn","preloadWarning","preloadViewportIoCallback","entry","isIntersecting","useIntersectionObserver","rootMargin","useLayoutEffect","current","ref","href","handleClick","e","isCtrlEvent","defaultPrevented","button","preventDefault","flushSync","unsub","subscribe","navigate","handleFocus","_","handleTouchStart","handleEnter","eventTarget","preloadTimeout","setTimeout","handleLeave","clearTimeout","composeHandlers","handlers","persist","call","filter","Boolean","forEach","handler","resolvedActiveProps","functionalUpdate","resolvedInactiveProps","resolvedClassName","join","resolvedStyle","maskedLocation","history","createHref","Object","keys","role","createLink","Comp","forwardRef","CreatedLink","props","jsx","Link","_asChild","_type","linkProps","createElement","metaKey","altKey","ctrlKey","shiftKey","linkOptions"],"sources":["/Users/christineiyer/Documents/tan-stack-learning/todo-dot-ai/frontend/node_modules/@tanstack/react-router/src/link.tsx"],"sourcesContent":["import * as React from 'react'\nimport { flushSync } from 'react-dom'\nimport {\n  deepEqual,\n  exactPathTest,\n  functionalUpdate,\n  preloadWarning,\n  removeTrailingSlash,\n} from '@tanstack/router-core'\nimport { useRouterState } from './useRouterState'\nimport { useRouter } from './useRouter'\n\nimport {\n  useForwardedRef,\n  useIntersectionObserver,\n  useLayoutEffect,\n} from './utils'\n\nimport { useMatches } from './Matches'\nimport type {\n  AnyRouter,\n  Constrain,\n  LinkCurrentTargetElement,\n  LinkOptions,\n  RegisteredRouter,\n  RoutePaths,\n} from '@tanstack/router-core'\nimport type { ReactNode } from 'react'\nimport type {\n  ValidateLinkOptions,\n  ValidateLinkOptionsArray,\n} from './typePrimitives'\n\nexport function useLinkProps<\n  TRouter extends AnyRouter = RegisteredRouter,\n  const TFrom extends string = string,\n  const TTo extends string | undefined = undefined,\n  const TMaskFrom extends string = TFrom,\n  const TMaskTo extends string = '',\n>(\n  options: UseLinkPropsOptions<TRouter, TFrom, TTo, TMaskFrom, TMaskTo>,\n  forwardedRef?: React.ForwardedRef<Element>,\n): React.ComponentPropsWithRef<'a'> {\n  const router = useRouter()\n  const [isTransitioning, setIsTransitioning] = React.useState(false)\n  const hasRenderFetched = React.useRef(false)\n  const innerRef = useForwardedRef(forwardedRef)\n\n  const {\n    // custom props\n    activeProps = () => ({ className: 'active' }),\n    inactiveProps = () => ({}),\n    activeOptions,\n    to,\n    preload: userPreload,\n    preloadDelay: userPreloadDelay,\n    hashScrollIntoView,\n    replace,\n    startTransition,\n    resetScroll,\n    viewTransition,\n    // element props\n    children,\n    target,\n    disabled,\n    style,\n    className,\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseLeave,\n    onTouchStart,\n    ignoreBlocker,\n    ...rest\n  } = options\n\n  const {\n    // prevent these from being returned\n    params: _params,\n    search: _search,\n    hash: _hash,\n    state: _state,\n    mask: _mask,\n    reloadDocument: _reloadDocument,\n    ...propsSafeToSpread\n  } = rest\n\n  // If this link simply reloads the current route,\n  // make sure it has a new key so it will trigger a data refresh\n\n  // If this `to` is a valid external URL, return\n  // null for LinkUtils\n\n  const type: 'internal' | 'external' = React.useMemo(() => {\n    try {\n      new URL(`${to}`)\n      return 'external'\n    } catch {}\n    return 'internal'\n  }, [to])\n\n  // subscribe to search params to re-build location if it changes\n  const currentSearch = useRouterState({\n    select: (s) => s.location.search,\n    structuralSharing: true as any,\n  })\n\n  // when `from` is not supplied, use the leaf route of the current matches as the `from` location\n  // so relative routing works as expected\n  const from = useMatches({\n    select: (matches) => options.from ?? matches[matches.length - 1]?.fullPath,\n  })\n  // Use it as the default `from` location\n  const _options = React.useMemo(() => ({ ...options, from }), [options, from])\n\n  const next = React.useMemo(\n    () => router.buildLocation(_options as any),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [router, _options, currentSearch],\n  )\n\n  const preload = React.useMemo(() => {\n    if (_options.reloadDocument) {\n      return false\n    }\n    return userPreload ?? router.options.defaultPreload\n  }, [router.options.defaultPreload, userPreload, _options.reloadDocument])\n  const preloadDelay =\n    userPreloadDelay ?? router.options.defaultPreloadDelay ?? 0\n\n  const isActive = useRouterState({\n    select: (s) => {\n      if (activeOptions?.exact) {\n        const testExact = exactPathTest(\n          s.location.pathname,\n          next.pathname,\n          router.basepath,\n        )\n        if (!testExact) {\n          return false\n        }\n      } else {\n        const currentPathSplit = removeTrailingSlash(\n          s.location.pathname,\n          router.basepath,\n        ).split('/')\n        const nextPathSplit = removeTrailingSlash(\n          next.pathname,\n          router.basepath,\n        ).split('/')\n\n        const pathIsFuzzyEqual = nextPathSplit.every(\n          (d, i) => d === currentPathSplit[i],\n        )\n        if (!pathIsFuzzyEqual) {\n          return false\n        }\n      }\n\n      if (activeOptions?.includeSearch ?? true) {\n        const searchTest = deepEqual(s.location.search, next.search, {\n          partial: !activeOptions?.exact,\n          ignoreUndefined: !activeOptions?.explicitUndefined,\n        })\n        if (!searchTest) {\n          return false\n        }\n      }\n\n      if (activeOptions?.includeHash) {\n        return s.location.hash === next.hash\n      }\n      return true\n    },\n  })\n\n  const doPreload = React.useCallback(() => {\n    router.preloadRoute(_options as any).catch((err) => {\n      console.warn(err)\n      console.warn(preloadWarning)\n    })\n  }, [_options, router])\n\n  const preloadViewportIoCallback = React.useCallback(\n    (entry: IntersectionObserverEntry | undefined) => {\n      if (entry?.isIntersecting) {\n        doPreload()\n      }\n    },\n    [doPreload],\n  )\n\n  useIntersectionObserver(\n    innerRef,\n    preloadViewportIoCallback,\n    { rootMargin: '100px' },\n    { disabled: !!disabled || !(preload === 'viewport') },\n  )\n\n  useLayoutEffect(() => {\n    if (hasRenderFetched.current) {\n      return\n    }\n    if (!disabled && preload === 'render') {\n      doPreload()\n      hasRenderFetched.current = true\n    }\n  }, [disabled, doPreload, preload])\n\n  if (type === 'external') {\n    return {\n      ...propsSafeToSpread,\n      ref: innerRef as React.ComponentPropsWithRef<'a'>['ref'],\n      type,\n      href: to,\n      ...(children && { children }),\n      ...(target && { target }),\n      ...(disabled && { disabled }),\n      ...(style && { style }),\n      ...(className && { className }),\n      ...(onClick && { onClick }),\n      ...(onFocus && { onFocus }),\n      ...(onMouseEnter && { onMouseEnter }),\n      ...(onMouseLeave && { onMouseLeave }),\n      ...(onTouchStart && { onTouchStart }),\n    }\n  }\n\n  // The click handler\n  const handleClick = (e: MouseEvent) => {\n    if (\n      !disabled &&\n      !isCtrlEvent(e) &&\n      !e.defaultPrevented &&\n      (!target || target === '_self') &&\n      e.button === 0\n    ) {\n      e.preventDefault()\n\n      flushSync(() => {\n        setIsTransitioning(true)\n      })\n\n      const unsub = router.subscribe('onResolved', () => {\n        unsub()\n        setIsTransitioning(false)\n      })\n\n      // All is well? Navigate!\n      // N.B. we don't call `router.commitLocation(next) here because we want to run `validateSearch` before committing\n      return router.navigate({\n        ..._options,\n        replace,\n        resetScroll,\n        hashScrollIntoView,\n        startTransition,\n        viewTransition,\n        ignoreBlocker,\n      } as any)\n    }\n  }\n\n  // The click handler\n  const handleFocus = (_: MouseEvent) => {\n    if (disabled) return\n    if (preload) {\n      doPreload()\n    }\n  }\n\n  const handleTouchStart = handleFocus\n\n  const handleEnter = (e: MouseEvent) => {\n    if (disabled) return\n    const eventTarget = (e.target || {}) as LinkCurrentTargetElement\n\n    if (preload) {\n      if (eventTarget.preloadTimeout) {\n        return\n      }\n\n      eventTarget.preloadTimeout = setTimeout(() => {\n        eventTarget.preloadTimeout = null\n        doPreload()\n      }, preloadDelay)\n    }\n  }\n\n  const handleLeave = (e: MouseEvent) => {\n    if (disabled) return\n    const eventTarget = (e.target || {}) as LinkCurrentTargetElement\n\n    if (eventTarget.preloadTimeout) {\n      clearTimeout(eventTarget.preloadTimeout)\n      eventTarget.preloadTimeout = null\n    }\n  }\n\n  const composeHandlers =\n    (handlers: Array<undefined | ((e: any) => void)>) =>\n    (e: { persist?: () => void; defaultPrevented: boolean }) => {\n      e.persist?.()\n      handlers.filter(Boolean).forEach((handler) => {\n        if (e.defaultPrevented) return\n        handler!(e)\n      })\n    }\n\n  // Get the active props\n  const resolvedActiveProps: React.HTMLAttributes<HTMLAnchorElement> = isActive\n    ? (functionalUpdate(activeProps as any, {}) ?? {})\n    : {}\n\n  // Get the inactive props\n  const resolvedInactiveProps: React.HTMLAttributes<HTMLAnchorElement> =\n    isActive ? {} : functionalUpdate(inactiveProps, {})\n\n  const resolvedClassName = [\n    className,\n    resolvedActiveProps.className,\n    resolvedInactiveProps.className,\n  ]\n    .filter(Boolean)\n    .join(' ')\n\n  const resolvedStyle = {\n    ...style,\n    ...resolvedActiveProps.style,\n    ...resolvedInactiveProps.style,\n  }\n\n  return {\n    ...propsSafeToSpread,\n    ...resolvedActiveProps,\n    ...resolvedInactiveProps,\n    href: disabled\n      ? undefined\n      : next.maskedLocation\n        ? router.history.createHref(next.maskedLocation.href)\n        : router.history.createHref(next.href),\n    ref: innerRef as React.ComponentPropsWithRef<'a'>['ref'],\n    onClick: composeHandlers([onClick, handleClick]),\n    onFocus: composeHandlers([onFocus, handleFocus]),\n    onMouseEnter: composeHandlers([onMouseEnter, handleEnter]),\n    onMouseLeave: composeHandlers([onMouseLeave, handleLeave]),\n    onTouchStart: composeHandlers([onTouchStart, handleTouchStart]),\n    disabled: !!disabled,\n    target,\n    ...(Object.keys(resolvedStyle).length && { style: resolvedStyle }),\n    ...(resolvedClassName && { className: resolvedClassName }),\n    ...(disabled && {\n      role: 'link',\n      'aria-disabled': true,\n    }),\n    ...(isActive && { 'data-status': 'active', 'aria-current': 'page' }),\n    ...(isTransitioning && { 'data-transitioning': 'transitioning' }),\n  }\n}\n\ntype UseLinkReactProps<TComp> = TComp extends keyof React.JSX.IntrinsicElements\n  ? React.JSX.IntrinsicElements[TComp]\n  : React.PropsWithoutRef<\n      TComp extends React.ComponentType<infer TProps> ? TProps : never\n    > &\n      React.RefAttributes<\n        TComp extends\n          | React.FC<{ ref: infer TRef }>\n          | React.Component<{ ref: infer TRef }>\n          ? TRef\n          : never\n      >\n\nexport type UseLinkPropsOptions<\n  TRouter extends AnyRouter = RegisteredRouter,\n  TFrom extends RoutePaths<TRouter['routeTree']> | string = string,\n  TTo extends string | undefined = '.',\n  TMaskFrom extends RoutePaths<TRouter['routeTree']> | string = TFrom,\n  TMaskTo extends string = '.',\n> = ActiveLinkOptions<'a', TRouter, TFrom, TTo, TMaskFrom, TMaskTo> &\n  UseLinkReactProps<'a'>\n\nexport type ActiveLinkOptions<\n  TComp = 'a',\n  TRouter extends AnyRouter = RegisteredRouter,\n  TFrom extends string = string,\n  TTo extends string | undefined = '.',\n  TMaskFrom extends string = TFrom,\n  TMaskTo extends string = '.',\n> = LinkOptions<TRouter, TFrom, TTo, TMaskFrom, TMaskTo> &\n  ActiveLinkOptionProps<TComp>\n\ntype ActiveLinkProps<TComp> = Partial<\n  LinkComponentReactProps<TComp> & {\n    [key: `data-${string}`]: unknown\n  }\n>\n\nexport interface ActiveLinkOptionProps<TComp = 'a'> {\n  /**\n   * A function that returns additional props for the `active` state of this link.\n   * These props override other props passed to the link (`style`'s are merged, `className`'s are concatenated)\n   */\n  activeProps?: ActiveLinkProps<TComp> | (() => ActiveLinkProps<TComp>)\n  /**\n   * A function that returns additional props for the `inactive` state of this link.\n   * These props override other props passed to the link (`style`'s are merged, `className`'s are concatenated)\n   */\n  inactiveProps?: ActiveLinkProps<TComp> | (() => ActiveLinkProps<TComp>)\n}\n\nexport type LinkProps<\n  TComp = 'a',\n  TRouter extends AnyRouter = RegisteredRouter,\n  TFrom extends string = string,\n  TTo extends string | undefined = '.',\n  TMaskFrom extends string = TFrom,\n  TMaskTo extends string = '.',\n> = ActiveLinkOptions<TComp, TRouter, TFrom, TTo, TMaskFrom, TMaskTo> &\n  LinkPropsChildren\n\nexport interface LinkPropsChildren {\n  // If a function is passed as a child, it will be given the `isActive` boolean to aid in further styling on the element it returns\n  children?:\n    | React.ReactNode\n    | ((state: {\n        isActive: boolean\n        isTransitioning: boolean\n      }) => React.ReactNode)\n}\n\ntype LinkComponentReactProps<TComp> = Omit<\n  UseLinkReactProps<TComp>,\n  keyof CreateLinkProps\n>\n\nexport type LinkComponentProps<\n  TComp = 'a',\n  TRouter extends AnyRouter = RegisteredRouter,\n  TFrom extends string = string,\n  TTo extends string | undefined = '.',\n  TMaskFrom extends string = TFrom,\n  TMaskTo extends string = '.',\n> = LinkComponentReactProps<TComp> &\n  LinkProps<TComp, TRouter, TFrom, TTo, TMaskFrom, TMaskTo>\n\nexport type CreateLinkProps = LinkProps<\n  any,\n  any,\n  string,\n  string,\n  string,\n  string\n>\n\nexport type LinkComponent<\n  in out TComp,\n  in out TDefaultFrom extends string = string,\n> = <\n  TRouter extends AnyRouter = RegisteredRouter,\n  const TFrom extends string = TDefaultFrom,\n  const TTo extends string | undefined = undefined,\n  const TMaskFrom extends string = TFrom,\n  const TMaskTo extends string = '',\n>(\n  props: LinkComponentProps<TComp, TRouter, TFrom, TTo, TMaskFrom, TMaskTo>,\n) => React.ReactElement\n\nexport interface LinkComponentRoute<\n  in out TDefaultFrom extends string = string,\n> {\n  defaultFrom: TDefaultFrom\n  <\n    TRouter extends AnyRouter = RegisteredRouter,\n    const TTo extends string | undefined = undefined,\n    const TMaskTo extends string = '',\n  >(\n    props: LinkComponentProps<\n      'a',\n      TRouter,\n      this['defaultFrom'],\n      TTo,\n      this['defaultFrom'],\n      TMaskTo\n    >,\n  ): React.ReactElement\n}\n\nexport function createLink<const TComp>(\n  Comp: Constrain<TComp, any, (props: CreateLinkProps) => ReactNode>,\n): LinkComponent<TComp> {\n  return React.forwardRef(function CreatedLink(props, ref) {\n    return <Link {...(props as any)} _asChild={Comp} ref={ref} />\n  }) as any\n}\n\nexport const Link: LinkComponent<'a'> = React.forwardRef<Element, any>(\n  (props, ref) => {\n    const { _asChild, ...rest } = props\n    const {\n      type: _type,\n      ref: innerRef,\n      ...linkProps\n    } = useLinkProps(rest as any, ref)\n\n    const children =\n      typeof rest.children === 'function'\n        ? rest.children({\n            isActive: (linkProps as any)['data-status'] === 'active',\n          })\n        : rest.children\n\n    if (typeof _asChild === 'undefined') {\n      // the ReturnType of useLinkProps returns the correct type for a <a> element, not a general component that has a disabled prop\n      // @ts-expect-error\n      delete linkProps.disabled\n    }\n\n    return React.createElement(\n      _asChild ? _asChild : 'a',\n      {\n        ...linkProps,\n        ref: innerRef,\n      },\n      children,\n    )\n  },\n) as any\n\nfunction isCtrlEvent(e: MouseEvent) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\n}\n\nexport type LinkOptionsFnOptions<\n  TOptions,\n  TComp,\n  TRouter extends AnyRouter = RegisteredRouter,\n> =\n  TOptions extends ReadonlyArray<any>\n    ? ValidateLinkOptionsArray<TRouter, TOptions, string, TComp>\n    : ValidateLinkOptions<TRouter, TOptions, string, TComp>\n\nexport type LinkOptionsFn<TComp> = <\n  const TOptions,\n  TRouter extends AnyRouter = RegisteredRouter,\n>(\n  options: LinkOptionsFnOptions<TOptions, TComp, TRouter>,\n) => TOptions\n\nexport const linkOptions: LinkOptionsFn<'a'> = (options) => {\n  return options as any\n}\n"],"mappings":";;;;;;;;AAiCgB,SAAAA,aAOdC,OAAA,EACAC,YAAA,EACkC;EAClC,MAAMC,MAAA,GAASC,SAAA,CAAU;EACzB,MAAM,CAACC,eAAA,EAAiBC,kBAAkB,IAAIC,KAAA,CAAMC,QAAA,CAAS,KAAK;EAC5D,MAAAC,gBAAA,GAAmBF,KAAA,CAAMG,MAAA,CAAO,KAAK;EACrC,MAAAC,QAAA,GAAWC,eAAA,CAAgBV,YAAY;EAEvC;IAAA;IAEJW,WAAA,GAAcA,CAAA,MAAO;MAAEC,SAAA,EAAW;IAAA;IAClCC,aAAA,GAAgBA,CAAA,MAAO;IACvBC,aAAA;IACAC,EAAA;IACAC,OAAA,EAASC,WAAA;IACTC,YAAA,EAAcC,gBAAA;IACdC,kBAAA;IACAC,OAAA;IACAC,eAAA;IACAC,WAAA;IACAC,cAAA;IAAA;IAEAC,QAAA;IACAC,MAAA;IACAC,QAAA;IACAC,KAAA;IACAhB,SAAA;IACAiB,OAAA;IACAC,OAAA;IACAC,YAAA;IACAC,YAAA;IACAC,YAAA;IACAC,aAAA;IACA,GAAGC;EAAA,IACDpC,OAAA;EAEE;IAAA;IAEJqC,MAAA,EAAQC,OAAA;IACRC,MAAA,EAAQC,OAAA;IACRC,IAAA,EAAMC,KAAA;IACNC,KAAA,EAAOC,MAAA;IACPC,IAAA,EAAMC,KAAA;IACNC,cAAA,EAAgBC,eAAA;IAChB,GAAGC;EAAA,IACDb,IAAA;EAQE,MAAAc,IAAA,GAAgC5C,KAAA,CAAM6C,OAAA,CAAQ,MAAM;IACpD;MACE,IAAAC,GAAA,CAAI,GAAGpC,EAAE,EAAE;MACR;IAAA,QACD;IACD;EAAA,GACN,CAACA,EAAE,CAAC;EAGP,MAAMqC,aAAA,GAAgBC,cAAA,CAAe;IACnCC,MAAA,EAASC,CAAA,IAAMA,CAAA,CAAEC,QAAA,CAASlB,MAAA;IAC1BmB,iBAAA,EAAmB;EAAA,CACpB;EAID,MAAMC,IAAA,GAAOC,UAAA,CAAW;IACtBL,MAAA,EAASM,OAAA,IAAY;;MAAA,OAAA7D,OAAA,CAAQ2D,IAAA,MAAQG,EAAA,GAAAD,OAAA,CAAQA,OAAA,CAAQE,MAAA,GAAS,CAAC,MAA1B,gBAAAD,EAAA,CAA6BE,QAAA;IAAA;EAAA,CACnE;EAED,MAAMC,QAAA,GAAW3D,KAAA,CAAM6C,OAAA,CAAQ,OAAO;IAAE,GAAGnD,OAAA;IAAS2D;EAAA,IAAS,CAAC3D,OAAA,EAAS2D,IAAI,CAAC;EAE5E,MAAMO,IAAA,GAAO5D,KAAA,CAAM6C,OAAA,CACjB,MAAMjD,MAAA,CAAOiE,aAAA,CAAcF,QAAe;EAAA;EAE1C,CAAC/D,MAAA,EAAQ+D,QAAA,EAAUZ,aAAa,CAClC;EAEM,MAAApC,OAAA,GAAUX,KAAA,CAAM6C,OAAA,CAAQ,MAAM;IAClC,IAAIc,QAAA,CAASlB,cAAA,EAAgB;MACpB;IAAA;IAEF,OAAA7B,WAAA,IAAehB,MAAA,CAAOF,OAAA,CAAQoE,cAAA;EAAA,GACpC,CAAClE,MAAA,CAAOF,OAAA,CAAQoE,cAAA,EAAgBlD,WAAA,EAAa+C,QAAA,CAASlB,cAAc,CAAC;EACxE,MAAM5B,YAAA,GACJC,gBAAA,IAAoBlB,MAAA,CAAOF,OAAA,CAAQqE,mBAAA,IAAuB;EAE5D,MAAMC,QAAA,GAAWhB,cAAA,CAAe;IAC9BC,MAAA,EAASC,CAAA,IAAM;MACb,IAAIzC,aAAA,oBAAAA,aAAA,CAAewD,KAAA,EAAO;QACxB,MAAMC,SAAA,GAAYC,aAAA,CAChBjB,CAAA,CAAEC,QAAA,CAASiB,QAAA,EACXR,IAAA,CAAKQ,QAAA,EACLxE,MAAA,CAAOyE,QACT;QACA,IAAI,CAACH,SAAA,EAAW;UACP;QAAA;MACT,OACK;QACL,MAAMI,gBAAA,GAAmBC,mBAAA,CACvBrB,CAAA,CAAEC,QAAA,CAASiB,QAAA,EACXxE,MAAA,CAAOyE,QAAA,EACPG,KAAA,CAAM,GAAG;QACX,MAAMC,aAAA,GAAgBF,mBAAA,CACpBX,IAAA,CAAKQ,QAAA,EACLxE,MAAA,CAAOyE,QAAA,EACPG,KAAA,CAAM,GAAG;QAEX,MAAME,gBAAA,GAAmBD,aAAA,CAAcE,KAAA,CACrC,CAACC,CAAA,EAAGC,CAAA,KAAMD,CAAA,KAAMN,gBAAA,CAAiBO,CAAC,CACpC;QACA,IAAI,CAACH,gBAAA,EAAkB;UACd;QAAA;MACT;MAGE,KAAAjE,aAAA,oBAAAA,aAAA,CAAeqE,aAAA,KAAiB,MAAM;QACxC,MAAMC,UAAA,GAAaC,SAAA,CAAU9B,CAAA,CAAEC,QAAA,CAASlB,MAAA,EAAQ2B,IAAA,CAAK3B,MAAA,EAAQ;UAC3DgD,OAAA,EAAS,EAACxE,aAAA,oBAAAA,aAAA,CAAewD,KAAA;UACzBiB,eAAA,EAAiB,EAACzE,aAAA,oBAAAA,aAAA,CAAe0E,iBAAA;QAAA,CAClC;QACD,IAAI,CAACJ,UAAA,EAAY;UACR;QAAA;MACT;MAGF,IAAItE,aAAA,oBAAAA,aAAA,CAAe2E,WAAA,EAAa;QACvB,OAAAlC,CAAA,CAAEC,QAAA,CAAShB,IAAA,KAASyB,IAAA,CAAKzB,IAAA;MAAA;MAE3B;IAAA;EACT,CACD;EAEK,MAAAkD,SAAA,GAAYrF,KAAA,CAAMsF,WAAA,CAAY,MAAM;IACxC1F,MAAA,CAAO2F,YAAA,CAAa5B,QAAe,EAAE6B,KAAA,CAAOC,GAAA,IAAQ;MAClDC,OAAA,CAAQC,IAAA,CAAKF,GAAG;MAChBC,OAAA,CAAQC,IAAA,CAAKC,cAAc;IAAA,CAC5B;EAAA,GACA,CAACjC,QAAA,EAAU/D,MAAM,CAAC;EAErB,MAAMiG,yBAAA,GAA4B7F,KAAA,CAAMsF,WAAA,CACrCQ,KAAA,IAAiD;IAChD,IAAIA,KAAA,oBAAAA,KAAA,CAAOC,cAAA,EAAgB;MACfV,SAAA;IAAA;EAEd,GACA,CAACA,SAAS,CACZ;EAEAW,uBAAA,CACE5F,QAAA,EACAyF,yBAAA,EACA;IAAEI,UAAA,EAAY;EAAQ,GACtB;IAAE3E,QAAA,EAAU,CAAC,CAACA,QAAA,IAAY,EAAEX,OAAA,KAAY;EAAY,CACtD;EAEAuF,eAAA,CAAgB,MAAM;IACpB,IAAIhG,gBAAA,CAAiBiG,OAAA,EAAS;MAC5B;IAAA;IAEE,KAAC7E,QAAA,IAAYX,OAAA,KAAY,UAAU;MAC3B0E,SAAA;MACVnF,gBAAA,CAAiBiG,OAAA,GAAU;IAAA;EAE5B,IAAC7E,QAAA,EAAU+D,SAAA,EAAW1E,OAAO,CAAC;EAEjC,IAAIiC,IAAA,KAAS,YAAY;IAChB;MACL,GAAGD,iBAAA;MACHyD,GAAA,EAAKhG,QAAA;MACLwC,IAAA;MACAyD,IAAA,EAAM3F,EAAA;MACN,IAAIU,QAAA,IAAY;QAAEA;MAAS;MAC3B,IAAIC,MAAA,IAAU;QAAEA;MAAO;MACvB,IAAIC,QAAA,IAAY;QAAEA;MAAS;MAC3B,IAAIC,KAAA,IAAS;QAAEA;MAAM;MACrB,IAAIhB,SAAA,IAAa;QAAEA;MAAU;MAC7B,IAAIiB,OAAA,IAAW;QAAEA;MAAQ;MACzB,IAAIC,OAAA,IAAW;QAAEA;MAAQ;MACzB,IAAIC,YAAA,IAAgB;QAAEA;MAAa;MACnC,IAAIC,YAAA,IAAgB;QAAEA;MAAa;MACnC,IAAIC,YAAA,IAAgB;QAAEA;MAAa;IACrC;EAAA;EAII,MAAA0E,WAAA,GAAeC,CAAA,IAAkB;IACrC,IACE,CAACjF,QAAA,IACD,CAACkF,WAAA,CAAYD,CAAC,KACd,CAACA,CAAA,CAAEE,gBAAA,KACF,CAACpF,MAAA,IAAUA,MAAA,KAAW,YACvBkF,CAAA,CAAEG,MAAA,KAAW,GACb;MACAH,CAAA,CAAEI,cAAA,CAAe;MAEjBC,SAAA,CAAU,MAAM;QACd7G,kBAAA,CAAmB,IAAI;MAAA,CACxB;MAED,MAAM8G,KAAA,GAAQjH,MAAA,CAAOkH,SAAA,CAAU,cAAc,MAAM;QAC3CD,KAAA;QACN9G,kBAAA,CAAmB,KAAK;MAAA,CACzB;MAID,OAAOH,MAAA,CAAOmH,QAAA,CAAS;QACrB,GAAGpD,QAAA;QACH3C,OAAA;QACAE,WAAA;QACAH,kBAAA;QACAE,eAAA;QACAE,cAAA;QACAU;MAAA,CACM;IAAA;EAEZ;EAGM,MAAAmF,WAAA,GAAeC,CAAA,IAAkB;IACrC,IAAI3F,QAAA,EAAU;IACd,IAAIX,OAAA,EAAS;MACD0E,SAAA;IAAA;EAEd;EAEA,MAAM6B,gBAAA,GAAmBF,WAAA;EAEnB,MAAAG,WAAA,GAAeZ,CAAA,IAAkB;IACrC,IAAIjF,QAAA,EAAU;IACR,MAAA8F,WAAA,GAAeb,CAAA,CAAElF,MAAA,IAAU,CAAC;IAElC,IAAIV,OAAA,EAAS;MACX,IAAIyG,WAAA,CAAYC,cAAA,EAAgB;QAC9B;MAAA;MAGUD,WAAA,CAAAC,cAAA,GAAiBC,UAAA,CAAW,MAAM;QAC5CF,WAAA,CAAYC,cAAA,GAAiB;QACnBhC,SAAA;MAAA,GACTxE,YAAY;IAAA;EAEnB;EAEM,MAAA0G,WAAA,GAAehB,CAAA,IAAkB;IACrC,IAAIjF,QAAA,EAAU;IACR,MAAA8F,WAAA,GAAeb,CAAA,CAAElF,MAAA,IAAU,CAAC;IAElC,IAAI+F,WAAA,CAAYC,cAAA,EAAgB;MAC9BG,YAAA,CAAaJ,WAAA,CAAYC,cAAc;MACvCD,WAAA,CAAYC,cAAA,GAAiB;IAAA;EAEjC;EAEA,MAAMI,eAAA,GACHC,QAAA,IACAnB,CAAA,IAA2D;;IAC1D,CAAA/C,EAAA,GAAA+C,CAAA,CAAEoB,OAAA,KAAF,gBAAAnE,EAAA,CAAAoE,IAAA,CAAArB,CAAA;IACAmB,QAAA,CAASG,MAAA,CAAOC,OAAO,EAAEC,OAAA,CAASC,OAAA,IAAY;MAC5C,IAAIzB,CAAA,CAAEE,gBAAA,EAAkB;MACxBuB,OAAA,CAASzB,CAAC;IAAA,CACX;EACH;EAGI,MAAA0B,mBAAA,GAA+DjE,QAAA,GAChEkE,gBAAA,CAAiB5H,WAAA,EAAoB,CAAE,MAAK,KAC7C,CAAC;EAGL,MAAM6H,qBAAA,GACJnE,QAAA,GAAW,KAAKkE,gBAAA,CAAiB1H,aAAA,EAAe,EAAE;EAEpD,MAAM4H,iBAAA,GAAoB,CACxB7H,SAAA,EACA0H,mBAAA,CAAoB1H,SAAA,EACpB4H,qBAAA,CAAsB5H,SAAA,CAErB,CAAAsH,MAAA,CAAOC,OAAO,EACdO,IAAA,CAAK,GAAG;EAEX,MAAMC,aAAA,GAAgB;IACpB,GAAG/G,KAAA;IACH,GAAG0G,mBAAA,CAAoB1G,KAAA;IACvB,GAAG4G,qBAAA,CAAsB5G;EAC3B;EAEO;IACL,GAAGoB,iBAAA;IACH,GAAGsF,mBAAA;IACH,GAAGE,qBAAA;IACH9B,IAAA,EAAM/E,QAAA,GACF,SACAsC,IAAA,CAAK2E,cAAA,GACH3I,MAAA,CAAO4I,OAAA,CAAQC,UAAA,CAAW7E,IAAA,CAAK2E,cAAA,CAAelC,IAAI,IAClDzG,MAAA,CAAO4I,OAAA,CAAQC,UAAA,CAAW7E,IAAA,CAAKyC,IAAI;IACzCD,GAAA,EAAKhG,QAAA;IACLoB,OAAA,EAASiG,eAAA,CAAgB,CAACjG,OAAA,EAAS8E,WAAW,CAAC;IAC/C7E,OAAA,EAASgG,eAAA,CAAgB,CAAChG,OAAA,EAASuF,WAAW,CAAC;IAC/CtF,YAAA,EAAc+F,eAAA,CAAgB,CAAC/F,YAAA,EAAcyF,WAAW,CAAC;IACzDxF,YAAA,EAAc8F,eAAA,CAAgB,CAAC9F,YAAA,EAAc4F,WAAW,CAAC;IACzD3F,YAAA,EAAc6F,eAAA,CAAgB,CAAC7F,YAAA,EAAcsF,gBAAgB,CAAC;IAC9D5F,QAAA,EAAU,CAAC,CAACA,QAAA;IACZD,MAAA;IACA,IAAIqH,MAAA,CAAOC,IAAA,CAAKL,aAAa,EAAE7E,MAAA,IAAU;MAAElC,KAAA,EAAO+G;IAAc;IAChE,IAAIF,iBAAA,IAAqB;MAAE7H,SAAA,EAAW6H;IAAkB;IACxD,IAAI9G,QAAA,IAAY;MACdsH,IAAA,EAAM;MACN,iBAAiB;IACnB;IACA,IAAI5E,QAAA,IAAY;MAAE,eAAe;MAAU,gBAAgB;IAAO;IAClE,IAAIlE,eAAA,IAAmB;MAAE,sBAAsB;IAAgB;EACjE;AACF;AAkIO,SAAS+I,WACdC,IAAA,EACsB;EACtB,OAAO9I,KAAA,CAAM+I,UAAA,CAAW,SAASC,YAAYC,KAAA,EAAO7C,GAAA,EAAK;IACvD,sBAAA8C,GAAA,CAAQC,IAAA,EAAM;MAAA,GAAIF,KAAA;MAAeG,QAAA,EAAUN,IAAA;MAAM1C;IAAA,CAAU;EAAA,CAC5D;AACH;AAEO,MAAM+C,IAAA,GAA2BnJ,KAAA,CAAM+I,UAAA,CAC5C,CAACE,KAAA,EAAO7C,GAAA,KAAQ;EACd,MAAM;IAAEgD,QAAA;IAAU,GAAGtH;EAAA,IAASmH,KAAA;EACxB;IACJrG,IAAA,EAAMyG,KAAA;IACNjD,GAAA,EAAKhG,QAAA;IACL,GAAGkJ;EAAA,IACD7J,YAAA,CAAaqC,IAAA,EAAasE,GAAG;EAEjC,MAAMhF,QAAA,GACJ,OAAOU,IAAA,CAAKV,QAAA,KAAa,aACrBU,IAAA,CAAKV,QAAA,CAAS;IACZ4C,QAAA,EAAWsF,SAAA,CAAkB,aAAa,MAAM;EAAA,CACjD,IACDxH,IAAA,CAAKV,QAAA;EAEP,WAAOgI,QAAA,KAAa,aAAa;IAGnC,OAAOE,SAAA,CAAUhI,QAAA;EAAA;EAGnB,OAAOtB,KAAA,CAAMuJ,aAAA,CACXH,QAAA,GAAWA,QAAA,GAAW,KACtB;IACE,GAAGE,SAAA;IACHlD,GAAA,EAAKhG;EACP,GACAgB,QACF;AAAA,CAEJ;AAEA,SAASoF,YAAYD,CAAA,EAAe;EAC3B,QAAC,EAAEA,CAAA,CAAEiD,OAAA,IAAWjD,CAAA,CAAEkD,MAAA,IAAUlD,CAAA,CAAEmD,OAAA,IAAWnD,CAAA,CAAEoD,QAAA;AACpD;AAkBa,MAAAC,WAAA,GAAmClK,OAAA,IAAY;EACnD,OAAAA,OAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}