{"ast":null,"code":"var _jsxFileName = \"/Users/christineiyer/Documents/tan-stack-learning/todo-dot-ai/frontend/src/routes.tsx\";\nimport { createRootRoute, createRoute, createRouter, RouterProvider } from '@tanstack/react-router';\nimport TodoPage from './pages/TodoPage';\nimport AiToolsPage from './pages/AiToolsPage';\nimport App from './App';\n\n// Define the root route with child routes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootRoute = createRootRoute({\n  component: App,\n  children: [createRoute({\n    path: '/',\n    component: TodoPage\n  }), createRoute({\n    path: '/ai-tools',\n    component: AiToolsPage\n  })]\n});\n\n// Create the router using the root route\nconst router = createRouter({\n  routeTree: rootRoute,\n  // Pass the root route directly\n  defaultPreload: 'intent'\n});\n\n// Register the router for type safety\n\nexport default function Routes() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n_c = Routes;\nvar _c;\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"names":["createRootRoute","createRoute","createRouter","RouterProvider","TodoPage","AiToolsPage","App","jsxDEV","_jsxDEV","rootRoute","component","children","path","router","routeTree","defaultPreload","Routes","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/christineiyer/Documents/tan-stack-learning/todo-dot-ai/frontend/src/routes.tsx"],"sourcesContent":["import { createRootRoute, createRoute, createRouter, RouterProvider } from '@tanstack/react-router';\nimport TodoPage from './pages/TodoPage';\nimport AiToolsPage from './pages/AiToolsPage';\nimport App from './App';\n\n// Define the root route with child routes\nconst rootRoute = createRootRoute({\n  component: App,\n  children: [\n    createRoute({\n      path: '/',\n      component: TodoPage,\n    }),\n    createRoute({\n      path: '/ai-tools',\n      component: AiToolsPage,\n    }),\n  ],\n});\n\n// Create the router using the root route\nconst router = createRouter({\n  routeTree: rootRoute, // Pass the root route directly\n  defaultPreload: 'intent',\n});\n\n// Register the router for type safety\ndeclare module '@tanstack/react-router' {\n  interface Register {\n    router: typeof router;\n  }\n}\n\nexport default function Routes() {\n  return <RouterProvider router={router} />;\n}"],"mappings":";AAAA,SAASA,eAAe,EAAEC,WAAW,EAAEC,YAAY,EAAEC,cAAc,QAAQ,wBAAwB;AACnG,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,GAAG,MAAM,OAAO;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGT,eAAe,CAAC;EAChCU,SAAS,EAAEJ,GAAG;EACdK,QAAQ,EAAE,CACRV,WAAW,CAAC;IACVW,IAAI,EAAE,GAAG;IACTF,SAAS,EAAEN;EACb,CAAC,CAAC,EACFH,WAAW,CAAC;IACVW,IAAI,EAAE,WAAW;IACjBF,SAAS,EAAEL;EACb,CAAC,CAAC;AAEN,CAAC,CAAC;;AAEF;AACA,MAAMQ,MAAM,GAAGX,YAAY,CAAC;EAC1BY,SAAS,EAAEL,SAAS;EAAE;EACtBM,cAAc,EAAE;AAClB,CAAC,CAAC;;AAEF;;AAOA,eAAe,SAASC,MAAMA,CAAA,EAAG;EAC/B,oBAAOR,OAAA,CAACL,cAAc;IAACU,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACC,EAAA,GAFuBL,MAAM;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}