{"ast":null,"code":"import { Derived } from \"./derived.js\";\nclass Effect {\n  constructor(opts) {\n    const {\n      eager,\n      fn,\n      ...derivedProps\n    } = opts;\n    this._derived = new Derived({\n      ...derivedProps,\n      fn: () => {},\n      onUpdate() {\n        fn();\n      }\n    });\n    if (eager) {\n      fn();\n    }\n  }\n  mount() {\n    return this._derived.mount();\n  }\n}\nexport { Effect };","map":{"version":3,"names":["Effect","constructor","opts","eager","fn","derivedProps","_derived","Derived","onUpdate","mount"],"sources":["/Users/christineiyer/Documents/tan-stack-learning/todo-dot-ai/frontend/node_modules/@tanstack/store/src/effect.ts"],"sourcesContent":["import { Derived } from './derived'\nimport type { DerivedOptions } from './derived'\n\ninterface EffectOptions\n  extends Omit<\n    DerivedOptions<unknown>,\n    'onUpdate' | 'onSubscribe' | 'lazy' | 'fn'\n  > {\n  /**\n   * Should the effect trigger immediately?\n   * @default false\n   */\n  eager?: boolean\n  fn: () => void\n}\n\nexport class Effect {\n  /**\n   * @private\n   */\n  _derived: Derived<void>\n\n  constructor(opts: EffectOptions) {\n    const { eager, fn, ...derivedProps } = opts\n\n    this._derived = new Derived({\n      ...derivedProps,\n      fn: () => {},\n      onUpdate() {\n        fn()\n      },\n    })\n\n    if (eager) {\n      fn()\n    }\n  }\n\n  mount() {\n    return this._derived.mount()\n  }\n}\n"],"mappings":";AAgBO,MAAMA,MAAA,CAAO;EAMlBC,YAAYC,IAAA,EAAqB;IAC/B,MAAM;MAAEC,KAAA;MAAOC,EAAA;MAAI,GAAGC;IAAiB,IAAAH,IAAA;IAElC,KAAAI,QAAA,GAAW,IAAIC,OAAA,CAAQ;MAC1B,GAAGF,YAAA;MACHD,EAAA,EAAIA,CAAA,KAAM,CAAC;MACXI,SAAA,EAAW;QACNJ,EAAA;MAAA;IACL,CACD;IAED,IAAID,KAAA,EAAO;MACNC,EAAA;IAAA;EACL;EAGFK,MAAA,EAAQ;IACC,YAAKH,QAAA,CAASG,KAAA,CAAM;EAAA;AAE/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}