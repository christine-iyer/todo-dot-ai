{"ast":null,"code":"var _jsxFileName = \"/Users/christineiyer/Documents/tan-stack-learning/todo-dot-ai/frontend/src/components/AddTodo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { createTodo } from '../api/todoApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTodo = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const queryClient = useQueryClient();\n\n  // Mutation for adding a new todo\n  const mutation = useMutation(createTodo, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['todos']); // Refetch the todos list\n      setTitle(''); // Clear the input field\n    }\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (title.trim()) {\n      mutation.mutate(title); // Trigger the API call\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginBottom: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new task...\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      style: {\n        padding: '0.5rem',\n        marginRight: '0.5rem',\n        width: '250px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: mutation.isLoading,\n      style: {\n        padding: '0.5rem'\n      },\n      children: mutation.isLoading ? 'Adding...' : 'Add Todo'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTodo, \"Fx3gTp0ApCkZTovU4Q61Cx8ZJa4=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["React","useState","useMutation","useQueryClient","createTodo","jsxDEV","_jsxDEV","AddTodo","_s","title","setTitle","queryClient","mutation","onSuccess","invalidateQueries","handleSubmit","e","preventDefault","trim","mutate","onSubmit","style","marginBottom","children","type","placeholder","value","onChange","target","padding","marginRight","width","fileName","_jsxFileName","lineNumber","columnNumber","disabled","isLoading","_c","$RefreshReg$"],"sources":["/Users/christineiyer/Documents/tan-stack-learning/todo-dot-ai/frontend/src/components/AddTodo.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { createTodo } from '../api/todoApi';\n\nconst AddTodo: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const queryClient = useQueryClient();\n\n  // Mutation for adding a new todo\n  const mutation = useMutation(createTodo, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['todos']); // Refetch the todos list\n      setTitle(''); // Clear the input field\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (title.trim()) {\n      mutation.mutate(title); // Trigger the API call\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ marginBottom: '1rem' }}>\n      <input\n        type=\"text\"placeholder=\"Add a new task...\"value={title}onChange={(e) => setTitle(e.target.value)}style={{ padding: '0.5rem', marginRight: '0.5rem', width: '250px' }}/>\n      <button\n        type=\"submit\"disabled={mutation.isLoading}style={{ padding: '0.5rem' }}>\n        {mutation.isLoading ? 'Adding...' : 'Add Todo'}\n      </button>\n    </form>);\n};\n\nexport default AddTodo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,cAAc,QAAQ,uBAAuB;AACnE,SAASC,UAAU,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,WAAW,GAAGR,cAAc,CAAC,CAAC;;EAEpC;EACA,MAAMS,QAAQ,GAAGV,WAAW,CAACE,UAAU,EAAE;IACvCS,SAAS,EAAEA,CAAA,KAAM;MACfF,WAAW,CAACG,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;MAC1CJ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB;EACF,CAAC,CAAC;EAEF,MAAMK,YAAY,GAAIC,CAAkB,IAAK;IAC3CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIR,KAAK,CAACS,IAAI,CAAC,CAAC,EAAE;MAChBN,QAAQ,CAACO,MAAM,CAACV,KAAK,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,oBACEH,OAAA;IAAMc,QAAQ,EAAEL,YAAa;IAACM,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5DjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MAAAC,WAAW,EAAC,mBAAmB;MAAAC,KAAK,EAAEjB,KAAM;MAAAkB,QAAQ,EAAGX,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;MAAAL,KAAK,EAAE;QAAEQ,OAAO,EAAE,QAAQ;QAAEC,WAAW,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzK7B,OAAA;MACEkB,IAAI,EAAC,QAAQ;MAAAY,QAAQ,EAAExB,QAAQ,CAACyB,SAAU;MAAAhB,KAAK,EAAE;QAAEQ,OAAO,EAAE;MAAS,CAAE;MAAAN,QAAA,EACtEX,QAAQ,CAACyB,SAAS,GAAG,WAAW,GAAG;IAAU;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AACX,CAAC;AAAC3B,EAAA,CA5BID,OAAiB;EAAA,QAEDJ,cAAc,EAGjBD,WAAW;AAAA;AAAAoC,EAAA,GALxB/B,OAAiB;AA8BvB,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}