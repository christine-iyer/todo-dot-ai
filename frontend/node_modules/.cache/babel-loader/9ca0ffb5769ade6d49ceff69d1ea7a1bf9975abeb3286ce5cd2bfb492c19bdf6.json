{"ast":null,"code":"function notFound(options = {}) {\n  options.isNotFound = true;\n  if (options.throw) throw options;\n  return options;\n}\nfunction isNotFound(obj) {\n  return !!(obj == null ? void 0 : obj.isNotFound);\n}\nexport { isNotFound, notFound };","map":{"version":3,"names":["notFound","options","isNotFound","throw","obj"],"sources":["/Users/christineiyer/Documents/tan-stack-learning/todo-dot-ai/frontend/node_modules/@tanstack/router-core/src/not-found.ts"],"sourcesContent":["import type { RouteIds } from './routeInfo'\nimport type { RegisteredRouter } from './router'\n\nexport type NotFoundError = {\n  /**\n    @deprecated\n    Use `routeId: rootRouteId` instead\n  */\n  global?: boolean\n  /**\n    @private\n    Do not use this. It's used internally to indicate a path matching error\n  */\n  _global?: boolean\n  data?: any\n  throw?: boolean\n  routeId?: RouteIds<RegisteredRouter['routeTree']>\n  headers?: HeadersInit\n}\n\nexport function notFound(options: NotFoundError = {}) {\n  ;(options as any).isNotFound = true\n  if (options.throw) throw options\n  return options\n}\n\nexport function isNotFound(obj: any): obj is NotFoundError {\n  return !!obj?.isNotFound\n}\n"],"mappings":"AAoBgB,SAAAA,SAASC,OAAA,GAAyB,IAAI;EAClDA,OAAA,CAAgBC,UAAA,GAAa;EAC3B,IAAAD,OAAA,CAAQE,KAAA,EAAa,MAAAF,OAAA;EAClB,OAAAA,OAAA;AACT;AAEO,SAASC,WAAWE,GAAA,EAAgC;EAClD,QAAC,EAACA,GAAA,oBAAAA,GAAA,CAAKF,UAAA;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}