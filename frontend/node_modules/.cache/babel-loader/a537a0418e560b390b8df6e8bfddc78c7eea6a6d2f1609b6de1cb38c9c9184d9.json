{"ast":null,"code":"import { TSR_DEFERRED_PROMISE, defer } from \"./defer.js\";\nimport { preloadWarning } from \"./link.js\";\nimport { isMatch } from \"./Matches.js\";\nimport { cleanPath, exactPathTest, interpolatePath, joinPaths, matchByPath, matchPathname, parsePathname, removeBasepath, removeTrailingSlash, resolvePath, trimPath, trimPathLeft, trimPathRight } from \"./path.js\";\nimport { decode, encode } from \"./qss.js\";\nimport { rootRouteId } from \"./root.js\";\nimport { BaseRootRoute, BaseRoute, BaseRouteApi } from \"./route.js\";\nimport { PathParamError, RouterCore, SearchParamError, componentTypes, defaultSerializeError, getInitialRouterState, getLocationChangeInfo, lazyFn } from \"./router.js\";\nimport { retainSearchParams, stripSearchParams } from \"./searchMiddleware.js\";\nimport { defaultParseSearch, defaultStringifySearch, parseSearchWith, stringifySearchWith } from \"./searchParams.js\";\nimport { createControlledPromise, deepEqual, escapeJSON, functionalUpdate, isPlainArray, isPlainObject, last, pick, replaceEqualDeep, shallow } from \"./utils.js\";\nimport { isRedirect, isResolvedRedirect, redirect } from \"./redirect.js\";\nimport { isNotFound, notFound } from \"./not-found.js\";\nimport { defaultGetScrollRestorationKey, getCssSelector, handleHashScroll, restoreScroll, scrollRestorationCache, setupScrollRestoration, storageKey } from \"./scroll-restoration.js\";\nexport { BaseRootRoute, BaseRoute, BaseRouteApi, PathParamError, RouterCore, SearchParamError, TSR_DEFERRED_PROMISE, cleanPath, componentTypes, createControlledPromise, decode, deepEqual, defaultGetScrollRestorationKey, defaultParseSearch, defaultSerializeError, defaultStringifySearch, defer, encode, escapeJSON, exactPathTest, functionalUpdate, getCssSelector, getInitialRouterState, getLocationChangeInfo, handleHashScroll, interpolatePath, isMatch, isNotFound, isPlainArray, isPlainObject, isRedirect, isResolvedRedirect, joinPaths, last, lazyFn, matchByPath, matchPathname, notFound, parsePathname, parseSearchWith, pick, preloadWarning, redirect, removeBasepath, removeTrailingSlash, replaceEqualDeep, resolvePath, restoreScroll, retainSearchParams, rootRouteId, scrollRestorationCache, setupScrollRestoration, shallow, storageKey, stringifySearchWith, stripSearchParams, trimPath, trimPathLeft, trimPathRight };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { TSR_DEFERRED_PROMISE, defer } from \"./defer.js\";\nimport { preloadWarning } from \"./link.js\";\nimport { isMatch } from \"./Matches.js\";\nimport { cleanPath, exactPathTest, interpolatePath, joinPaths, matchByPath, matchPathname, parsePathname, removeBasepath, removeTrailingSlash, resolvePath, trimPath, trimPathLeft, trimPathRight } from \"./path.js\";\nimport { decode, encode } from \"./qss.js\";\nimport { rootRouteId } from \"./root.js\";\nimport { BaseRootRoute, BaseRoute, BaseRouteApi } from \"./route.js\";\nimport { PathParamError, RouterCore, SearchParamError, componentTypes, defaultSerializeError, getInitialRouterState, getLocationChangeInfo, lazyFn } from \"./router.js\";\nimport { retainSearchParams, stripSearchParams } from \"./searchMiddleware.js\";\nimport { defaultParseSearch, defaultStringifySearch, parseSearchWith, stringifySearchWith } from \"./searchParams.js\";\nimport { createControlledPromise, deepEqual, escapeJSON, functionalUpdate, isPlainArray, isPlainObject, last, pick, replaceEqualDeep, shallow } from \"./utils.js\";\nimport { isRedirect, isResolvedRedirect, redirect } from \"./redirect.js\";\nimport { isNotFound, notFound } from \"./not-found.js\";\nimport { defaultGetScrollRestorationKey, getCssSelector, handleHashScroll, restoreScroll, scrollRestorationCache, setupScrollRestoration, storageKey } from \"./scroll-restoration.js\";\nexport {\n  BaseRootRoute,\n  BaseRoute,\n  BaseRouteApi,\n  PathParamError,\n  RouterCore,\n  SearchParamError,\n  TSR_DEFERRED_PROMISE,\n  cleanPath,\n  componentTypes,\n  createControlledPromise,\n  decode,\n  deepEqual,\n  defaultGetScrollRestorationKey,\n  defaultParseSearch,\n  defaultSerializeError,\n  defaultStringifySearch,\n  defer,\n  encode,\n  escapeJSON,\n  exactPathTest,\n  functionalUpdate,\n  getCssSelector,\n  getInitialRouterState,\n  getLocationChangeInfo,\n  handleHashScroll,\n  interpolatePath,\n  isMatch,\n  isNotFound,\n  isPlainArray,\n  isPlainObject,\n  isRedirect,\n  isResolvedRedirect,\n  joinPaths,\n  last,\n  lazyFn,\n  matchByPath,\n  matchPathname,\n  notFound,\n  parsePathname,\n  parseSearchWith,\n  pick,\n  preloadWarning,\n  redirect,\n  removeBasepath,\n  removeTrailingSlash,\n  replaceEqualDeep,\n  resolvePath,\n  restoreScroll,\n  retainSearchParams,\n  rootRouteId,\n  scrollRestorationCache,\n  setupScrollRestoration,\n  shallow,\n  storageKey,\n  stringifySearchWith,\n  stripSearchParams,\n  trimPath,\n  trimPathLeft,\n  trimPathRight\n};\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}