{"ast":null,"code":"import * as React from \"react\";\nimport { useRouter } from \"./useRouter.js\";\nfunction useNavigate(_defaultOpts) {\n  const {\n    navigate\n  } = useRouter();\n  return React.useCallback(options => {\n    return navigate({\n      from: _defaultOpts == null ? void 0 : _defaultOpts.from,\n      ...options\n    });\n  }, [_defaultOpts == null ? void 0 : _defaultOpts.from, navigate]);\n}\nfunction Navigate(props) {\n  const router = useRouter();\n  const previousPropsRef = React.useRef(null);\n  React.useEffect(() => {\n    if (previousPropsRef.current !== props) {\n      router.navigate({\n        ...props\n      });\n      previousPropsRef.current = props;\n    }\n  }, [router, props]);\n  return null;\n}\nexport { Navigate, useNavigate };","map":{"version":3,"names":["useNavigate","_defaultOpts","navigate","useRouter","React","useCallback","options","from","Navigate","props","router","previousPropsRef","useRef","useEffect","current"],"sources":["/Users/christineiyer/Documents/tan-stack-learning/todo-dot-ai/frontend/node_modules/@tanstack/react-router/src/useNavigate.tsx"],"sourcesContent":["import * as React from 'react'\nimport { useRouter } from './useRouter'\nimport type {\n  AnyRouter,\n  FromPathOption,\n  NavigateOptions,\n  RegisteredRouter,\n  UseNavigateResult,\n} from '@tanstack/router-core'\n\nexport function useNavigate<\n  TRouter extends AnyRouter = RegisteredRouter,\n  TDefaultFrom extends string = string,\n>(_defaultOpts?: {\n  from?: FromPathOption<TRouter, TDefaultFrom>\n}): UseNavigateResult<TDefaultFrom> {\n  const { navigate } = useRouter()\n\n  return React.useCallback(\n    (options: NavigateOptions) => {\n      return navigate({\n        from: _defaultOpts?.from,\n        ...options,\n      })\n    },\n    [_defaultOpts?.from, navigate],\n  ) as UseNavigateResult<TDefaultFrom>\n}\n\nexport function Navigate<\n  TRouter extends AnyRouter = RegisteredRouter,\n  const TFrom extends string = string,\n  const TTo extends string | undefined = undefined,\n  const TMaskFrom extends string = TFrom,\n  const TMaskTo extends string = '',\n>(props: NavigateOptions<TRouter, TFrom, TTo, TMaskFrom, TMaskTo>): null {\n  const router = useRouter()\n\n  const previousPropsRef = React.useRef<NavigateOptions<\n    TRouter,\n    TFrom,\n    TTo,\n    TMaskFrom,\n    TMaskTo\n  > | null>(null)\n  React.useEffect(() => {\n    if (previousPropsRef.current !== props) {\n      router.navigate({\n        ...props,\n      })\n      previousPropsRef.current = props\n    }\n  }, [router, props])\n  return null\n}\n"],"mappings":";;AAUO,SAASA,YAGdC,YAAA,EAEkC;EAC5B;IAAEC;EAAS,IAAIC,SAAA,CAAU;EAE/B,OAAOC,KAAA,CAAMC,WAAA,CACVC,OAAA,IAA6B;IAC5B,OAAOJ,QAAA,CAAS;MACdK,IAAA,EAAMN,YAAA,oBAAAA,YAAA,CAAcM,IAAA;MACpB,GAAGD;IAAA,CACJ;EACH,GACA,CAACL,YAAA,oBAAAA,YAAA,CAAcM,IAAA,EAAML,QAAQ,CAC/B;AACF;AAEO,SAASM,SAMdC,KAAA,EAAuE;EACvE,MAAMC,MAAA,GAASP,SAAA,CAAU;EAEnB,MAAAQ,gBAAA,GAAmBP,KAAA,CAAMQ,MAAA,CAMrB,IAAI;EACdR,KAAA,CAAMS,SAAA,CAAU,MAAM;IAChB,IAAAF,gBAAA,CAAiBG,OAAA,KAAYL,KAAA,EAAO;MACtCC,MAAA,CAAOR,QAAA,CAAS;QACd,GAAGO;MAAA,CACJ;MACDE,gBAAA,CAAiBG,OAAA,GAAUL,KAAA;IAAA;EAC7B,GACC,CAACC,MAAA,EAAQD,KAAK,CAAC;EACX;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}